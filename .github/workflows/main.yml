name: snxgo build

on:
  push:
    branches:
      - "**"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.19"]
        go-args:
          [
            "GOOS=linux GOARCH=amd64",
            "GOOS=darwin GOARCH=amd64",
            "GOOS=darwin GOARCH=arm64",
          ]

    steps:
      - uses: actions/checkout@v3
      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      # You can test your matrix by printing the current Go version
      - name: Display Go version
        run: go version
      - name: Install dependencies
        run: go mod download
      - name: Build
        run: make ${{ matrix.go-args }}
      - name: "Upload Artifact"
        uses: actions/upload-artifact@v3
        with:
          name: bin
          path: bin/snxgo-*
          retention-days: 5

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
          name: bin
          path: bin

      - name: Prepare release notes
        run: |
          notes_file=notes.md
          echo "# ðŸ¤– Files Checksum" > $notes_file
          echo "```" >> $notes_file
          sha256sum  bin/* >> $notes_file
          echo "```" >> $notes_file

      # Create release
      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v3.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "bin/*"
          bodyFile: notes.md
          tag: ${{ steps.generate_release_tag.outputs.release_tag }}
